{"version":3,"sources":["HomeScreen.js"],"names":[],"mappings":";AAGA;;;;AAMA;;;;;;;;AAJA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;;eACkB,QAAQ,aAAR,C;;IAAZ,O,YAAA,O;;gBACgB,QAAQ,kBAAR,C;;IAAhB,W,aAAA,W;;;AAON,IAAM,QAAQ;AACV,eAAW,SADD;AAEV,gBAAY,OAFF;AAGV,aAAS;AAHC,CAAd;;IAMM,U;cAAA,U;;AAGF,aAHE,UAGF,CAAY,KAAZ,EAAmB;AAAA,8BAHjB,UAGiB;;AAAA,sEAHjB,UAGiB,aACT,KADS;;AAGlB;;iBANC,U;;iCAQO;AACL,gBAAI,KAAK,KAAL,CAAW,UAAf,EAA2B;AACvB,uBAAO;AAAA;oBAAA;oBAAA;AAAA,iBAAP;AACH;AACD,gBAAI,gBAAJ;AACA,gBAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACpB,0BAAU,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB;AAAA,2BAC7B,oBAAC,IAAD,IAAM,MAAM,KAAZ,EAAmB,KAAK,MAAM,EAA9B,GAD6B;AAAA,iBAAvB,CAAV;AAGH,aAJD,MAIO;AACH,0BAAU,uBAAV;AACH;AACD,mBACI;AAAA;gBAAA,EAAM,OAAO,OAAO,SAApB;AACI,qCADJ;AAEI,qCAAiB,QAAQ,mCAAR,CAFrB;AAGI,0CAAqB,SAHzB;gBAII;AAAA;oBAAA,EAAM,OAAO,OAAO,IAApB;oBAAA;oBAAoC;AAApC;AAJJ,aADJ;AAQH;;;WA5BC,U;EAAmB,MAAM,S;;AA8B/B,IAAI,SAAS,wBAAW,MAAX,CAAkB;AAC3B,eAAW;AACP,cAAM,CADC;AAEP,yBAAiB,SAFV;AAGP,oBAAY;AAHL,KADgB;AAM3B,UAAM;AACF,kBAAU,EADR;AAEF,eAAO,SAFL;AAGF,mBAAW;AAHT;AANqB,CAAlB,CAAb;;AAaA,OAAO,OAAP,GAAiB,QAAQ;AAAA,WAAU;AAC/B,iBAAS,MAAM;AADgB,KAAV;AAAA,CAAR,EAEb,UAFa,CAAjB","file":"HomeScreen-compiled.js","sourcesContent":["/**\n * @flow\n */\n'use strict';\n\nvar React = require('React');\nvar Navigator = require('Navigator');\nvar { connect } = require('react-redux');\nvar { loadMatches } = require('../actions/index');\nimport {\n    StyleSheet,\n    Text,\n    View,\n} from 'react-native';\n\nconst Props = {\n    navigator: Navigator,\n    isFetching: Boolean,\n    matches: Array\n};\n\nclass HomeScreen extends React.Component {\n    props: Props;\n\n    constructor(props) {\n        super(props);\n        //this.state = {matches: []};\n    }\n\n    render() {\n        if (this.props.isFetching) {\n            return <p>Loading...</p>;\n        }\n        let matches;\n        if (this.props.matches) {\n            matches = this.props.matches.map(match =>\n                <Post post={match} key={match.id} />\n            );\n        } else {\n            matches = \"Events aren't planned\";\n        }\n        return (\n            <View style={styles.container}\n                title={`Schedule`}\n                backgroundImage={require('../images/schedule-background.png')}\n                selectedSectionColor=\"#51CDDA\">\n                <Text style={styles.text}>Matches: {matches}</Text>\n            </View>\n        );\n    }\n}\nvar styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#55b8a8',\n        paddingTop: 50\n    },\n    text: {\n        fontSize: 20,\n        color: '#ffffff',\n        alignSelf: 'center'\n    }\n});\n\nmodule.exports = connect(state => ({\n    matches: state.matches\n}))(HomeScreen);\n"]}